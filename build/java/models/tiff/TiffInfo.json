{
  "app": "executor",
  "version": "0.0.1",
  "category": "tiff",
  "name": "TIFF information",
  "id": "cd106bf3-1670-47b3-9beb-1f0c825d17a6",
  "tags": [
    "i/o"
  ],
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.maps.tiff.TiffInfo"
  },
  "in_ports": [
    {
      "value_type": "scalar",
      "name": "file",
      "caption": "file",
      "hint": "[Optional] String path to the file. If specified, it is used instead of \"File\" parameter (with all replacements performed in that parameter)."
    },
    {
      "value_type": "scalar",
      "name": "file_name_addition",
      "caption": "file name addition",
      "hint": "[Optional] Modification for input file name."
    }
  ],
  "out_ports": [
    {
      "value_type": "scalar",
      "name": "valid",
      "hint": "\"true\" if the input file is in TIFF format and it was read successfully;\n\"false\" in other case (in particular in a case of some exception).\nNote: this flag can be \"true\" even for an invalid file,\nif reading was successful but there are problems in the non-analyzed parts of the file."
    },
    {
      "value_type": "scalar",
      "name": "all_ifds",
      "hint": "All IFDs information in JSON array format.\nNote: this is JSON array, NOT a single JSON object!"
    },
    {
      "value_type": "scalar",
      "name": "pretty_all_ifds",
      "hint": "All IFDs information in human-readable format."
    },
    {
      "value_type": "scalar",
      "name": "number_of_images"
    },
    {
      "value_type": "scalar",
      "name": "image_dim_x"
    },
    {
      "value_type": "scalar",
      "name": "image_dim_y"
    },
    {
      "value_type": "scalar",
      "name": "ifd",
      "hint": "IFD information in JSON format."
    },
    {
      "value_type": "scalar",
      "name": "pretty_ifd",
      "hint": "IFD information in human-readable format."
    },
    {
      "value_type": "scalar",
      "name": "file_size",
      "hint": "Length of TIFF file."
    },
    {
      "value_type": "scalar",
      "name": "absolute_path",
      "caption": "absolute path",
      "hint": "Actual full absolute path to the file",
      "advanced": true
    },
    {
      "value_type": "scalar",
      "name": "parent_folder",
      "caption": "parent folder",
      "hint": "Absolute path to the parent folder of the file",
      "advanced": true
    },
    {
      "value_type": "scalar",
      "name": "file_name",
      "caption": "file name",
      "hint": "Actual file name (without folder)",
      "advanced": true
    }
  ],
  "controls": [
    {
      "caption": "File",
      "name": "file",
      "description": "You can use here relative paths (without starting \"/\" or \"c:\\\"), for example, \"test.tiff\" or \"images/test.tiff\". They will be resolved relative the current folder, containing the executed chain.\nIf this path starts with substring %TEMP%, %TEMP%/ or %TEMP%x. where x is OS-depended file separator character, this substring is replaced with the full path to the system temp directory (System.getProperty(\"java.io.tmpdir\")) with ending file separator. For example, it is correct to write here %TEMP%my_file.dat, %TEMP%/my_file.dat or (in Windows) %TEMP%\\my_file.dat.\nAlso you can use in this string Java system properties: \"${name}\", for example: \"${java.io.tmpdir}\", and executor system properties \"${path.name.ext}\", \"${path.name}\", \"${file.name.ext}\", \"${file.name}\", \"${resources}\" (chain path/file name with/without extension, resource folder of the platform, containing this function).",
      "value_type": "String",
      "edition_type": "file",
      "default": ""
    },
    {
      "name": "fileNameAdditionMode",
      "caption": "How to add \"file name addition\" (for example XXX.DAT)",
      "description": "This mode can be used together with input string \"file name addition\"",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "NONE",
          "caption": "no correction (\"file name addition\" is not used)"
        },
        {
          "value": "AFTER_ALL_PATH",
          "caption": "after all path: /path => /pathXXX.DAT"
        },
        {
          "value": "REPLACE_IN_PATH",
          "caption": "replace $$$ in path: /path/name$$$.ext => /path/nameXXX.DAT.ext"
        },
        {
          "value": "REPLACE_IN_PATH_REMOVING_EXTENSION",
          "caption": "replace $$$ with the addition, but without its extension: /path/name$$$.ext => /path/nameXXX.ext"
        }
      ],
      "default": "NONE"
    },
    {
      "caption": "Secure mode",
      "name": "secure",
      "description": "If set, \"file name addition\" feature and Java system properties in the path are disabled, and the path is checked that it does not contain \"suspicious\" characters/substring like % (property?), ${... (variable inside a string?). Executor system properties \"${path.name.ext}\", \"${path.name}\", \"${file.name.ext}\", \"${file.name}\" and starting %TEMP%/ are enabled.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "caption": "Requires existing file",
      "name": "requireFileExistence",
      "description": "If set, the input file must exist; in other case, this function will throw an exception.\nIf this flag is cleared and the file does not exist, this function does nothing.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    },
    {
      "caption": "Requires valid TIFF",
      "name": "requireValidTiff",
      "description": "If set, the input file (when it exists) must be a correct TIFF file; in other case, this function will throw an exception.\nIf this flag is cleared and the file is not a TIFF file, this function does nothing.\nIn any case, you can check that the file is a correct TIFF in \"valid\" output port (but if this flag is set, that port will contain \"false\" only in a case of an exception).",
      "value_type": "boolean",
      "edition_type": "value",
      "default": false
    },
    {
      "caption": "IFD index",
      "name": "ifdIndex",
      "description": "Index of the selected image (IFD) inside the TIFF.\nNote that the information about all TIFF file, returned in \"all_ifds\" and \"pretty_all_ifds\" ports, does not depend on this parameter.",
      "value_type": "int",
      "edition_type": "value",
      "default": 0
    },
    {
      "name": "visibleResult",
      "caption": "Visible result",
      "value_type": "String",
      "edition_type": "enum",
      "items": [
        {
          "value": "all_ifds",
          "caption": "All IFDs information in JSON array format"
        },
        {
          "value": "pretty_all_ifds",
          "caption": "All IFDs information in human-readable format"
        },
        {
          "value": "ifd",
          "caption": "Selected IFD information in JSON format"
        },
        {
          "value": "pretty_ifd",
          "caption": "Selected IFD information in human-readable format"
        }
      ],
      "default": "pretty_all_ifds"
    }
  ]
}